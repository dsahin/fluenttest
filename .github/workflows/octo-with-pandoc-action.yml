name: octo-with-pandoc
on: workflow_dispatch
jobs:
  generateIssuesReport:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo    
      - run: "mkdir outputs"
      - run: "mkdir pdfs"          
      # Install Node 12
      - uses: actions/setup-node@v3
        with:
          version: 18
      - run: npm install @octokit/action
      # Node.js script can be anywhere. A good convention is to put local GitHub Actions
      # into the `.github/actions` folder
      - run: node .github/actions/issues.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
      - name: Render template
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: issues-rest.j2
          output_file: outputs/issues.md
          data_file: outputs/issues.json
          data_format: json # Will try to guess from the extension instead (unnecessary in this case)               
      - name: converting markdown to pdf
        uses: docker://rstropek/pandoc-latex
        with:
          args: >-  # allows you to break string into multiple lines
            --from markdown
            --template https://raw.githubusercontent.com/Wandmalfarbe/pandoc-latex-template/v2.0.0/eisvogel.tex 
            --output=outputs/issues.pdf
            outputs/issues.md             
      - name: Upload PDF
        uses: actions/upload-artifact@v1
        with:
          name: outputs
          path: outputs          